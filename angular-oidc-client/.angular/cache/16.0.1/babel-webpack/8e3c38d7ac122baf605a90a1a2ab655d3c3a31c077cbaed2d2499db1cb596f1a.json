{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"angular-auth-oidc-client\";\nimport * as i2 from \"../LocalStorage.service\";\nimport * as i3 from \"@angular/common\";\nfunction ProfileComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"button\", 1);\n    i0.ɵɵlistener(\"click\", function ProfileComponent_ng_container_0_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.logout());\n    });\n    i0.ɵɵtext(2, \"Logout\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"h1\");\n    i0.ɵɵtext(4, \"isAuthenticated:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5);\n    i0.ɵɵelementStart(6, \"h1\");\n    i0.ɵɵtext(7, \"accessToken:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8);\n    i0.ɵɵelementStart(9, \"h1\");\n    i0.ɵɵtext(10, \"accessToken:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(11);\n    i0.ɵɵelementStart(12, \"h1\");\n    i0.ɵɵtext(13, \"configId:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14);\n    i0.ɵɵelementStart(15, \"h1\");\n    i0.ɵɵtext(16, \"userData:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(17);\n    i0.ɵɵpipe(18, \"json\");\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.loginResponse.isAuthenticated, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.loginResponse.accessToken, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.loginResponse.idToken, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.loginResponse.configId, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(18, 5, ctx_r0.loginResponse.userData), \"\\n\");\n  }\n}\nclass ProfileComponent {\n  ngOnInit() {\n    this.loginResponse = this.localStorageService.getItem('loginResponse');\n  }\n  logout() {\n    this.oidcSecurityService.logoff().subscribe(result => console.log(result));\n  }\n  constructor(oidcSecurityService, localStorageService) {\n    this.oidcSecurityService = oidcSecurityService;\n    this.localStorageService = localStorageService;\n  }\n}\nProfileComponent.ɵfac = function ProfileComponent_Factory(t) {\n  return new (t || ProfileComponent)(i0.ɵɵdirectiveInject(i1.OidcSecurityService), i0.ɵɵdirectiveInject(i2.LocalStorageService));\n};\nProfileComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ProfileComponent,\n  selectors: [[\"app-profile\"]],\n  decls: 1,\n  vars: 1,\n  consts: [[4, \"ngIf\"], [3, \"click\"]],\n  template: function ProfileComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ProfileComponent_ng_container_0_Template, 19, 7, \"ng-container\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.loginResponse.isAuthenticated);\n    }\n  },\n  dependencies: [i3.NgIf, i3.JsonPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { ProfileComponent };","map":{"version":3,"names":["i0","ɵɵelementContainerStart","ɵɵelementStart","ɵɵlistener","ProfileComponent_ng_container_0_Template_button_click_1_listener","ɵɵrestoreView","_r2","ctx_r1","ɵɵnextContext","ɵɵresetView","logout","ɵɵtext","ɵɵelementEnd","ɵɵelementContainerEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","loginResponse","isAuthenticated","accessToken","idToken","configId","ɵɵpipeBind1","userData","ProfileComponent","ngOnInit","localStorageService","getItem","oidcSecurityService","logoff","subscribe","result","console","log","constructor","ɵɵdirectiveInject","i1","OidcSecurityService","i2","LocalStorageService","selectors","decls","vars","consts","template","ProfileComponent_Template","rf","ctx","ɵɵtemplate","ProfileComponent_ng_container_0_Template","ɵɵproperty"],"sources":["C:\\Users\\MICROSOFT\\source\\repos\\Microtec\\IdentityServer\\angular-oidc-client\\src\\app\\profile\\profile.component.ts","C:\\Users\\MICROSOFT\\source\\repos\\Microtec\\IdentityServer\\angular-oidc-client\\src\\app\\profile\\profile.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { OidcSecurityService } from 'angular-auth-oidc-client';\nimport { LocalStorageService } from '../LocalStorage.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss'],\n})\nexport class ProfileComponent {\n  loginResponse: any;\n\n  ngOnInit() {\n    this.loginResponse = this.localStorageService.getItem('loginResponse');\n  }\n  logout() {\n    this.oidcSecurityService\n      .logoff()\n      .subscribe((result) => console.log(result));\n  }\n\n  constructor(\n    public oidcSecurityService: OidcSecurityService,\n    private localStorageService: LocalStorageService\n  ) {}\n}\n","<ng-container *ngIf=\"loginResponse.isAuthenticated\">\n  <button (click)=\"logout()\">Logout</button>\n\n  <h1>isAuthenticated:</h1>\n  {{ loginResponse.isAuthenticated }}\n  <h1>accessToken:</h1>\n  {{ loginResponse.accessToken }}\n  <h1>accessToken:</h1>\n  {{ loginResponse.idToken }}\n  <h1>configId:</h1>\n  {{ loginResponse.configId }}\n  <h1>userData:</h1>\n  {{ loginResponse.userData | json }}\n</ng-container>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}