{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../LocalStorage.service\";\nclass WeatherComponent {\n  ngOnInit() {\n    //Called after the constructor, initializing input properties, and the first call to ngOnChanges.\n    //Add 'implements OnInit' to the class.\n    const httpOptions = {\n      headers: {\n        'Content-Type': 'application/json',\n        authorization: `Bearer ${this.localStorage.getItem('loginResponse').idToken}`\n      }\n    };\n    this.httService.get('https://localhost:6001/WeatherForecast', httpOptions).subscribe(r => console.log(r));\n  }\n  constructor(httService, localStorage) {\n    this.httService = httService;\n    this.localStorage = localStorage;\n  }\n}\nWeatherComponent.ɵfac = function WeatherComponent_Factory(t) {\n  return new (t || WeatherComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.LocalStorageService));\n};\nWeatherComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: WeatherComponent,\n  selectors: [[\"app-weather\"]],\n  decls: 2,\n  vars: 0,\n  template: function WeatherComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"weather works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { WeatherComponent };","map":{"version":3,"names":["WeatherComponent","ngOnInit","httpOptions","headers","authorization","localStorage","getItem","idToken","httService","get","subscribe","r","console","log","constructor","i0","ɵɵdirectiveInject","i1","HttpClient","i2","LocalStorageService","selectors","decls","vars","template","WeatherComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["C:\\Users\\MICROSOFT\\source\\repos\\Microtec\\IdentityServer\\angular-oidc-client\\src\\app\\weather\\weather.component.ts","C:\\Users\\MICROSOFT\\source\\repos\\Microtec\\IdentityServer\\angular-oidc-client\\src\\app\\weather\\weather.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { LocalStorageService } from '../LocalStorage.service';\n\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.scss'],\n})\nexport class WeatherComponent implements OnInit {\n  ngOnInit(): void {\n    //Called after the constructor, initializing input properties, and the first call to ngOnChanges.\n    //Add 'implements OnInit' to the class.\n\n    const httpOptions = {\n      headers: {\n        'Content-Type': 'application/json',\n        authorization: `Bearer ${\n          this.localStorage.getItem('loginResponse').idToken\n        }`,\n      },\n    };\n\n    this.httService\n      .get('https://localhost:6001/WeatherForecast', httpOptions)\n      .subscribe((r) => console.log(r));\n  }\n  constructor(\n    private httService: HttpClient,\n    private localStorage: LocalStorageService\n  ) {}\n}\n","<p>weather works!</p>\n"],"mappings":";;;AAIA,MAKaA,gBAAgB;EAC3BC,QAAQA,CAAA;IACN;IACA;IAEA,MAAMC,WAAW,GAAG;MAClBC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCC,aAAa,EAAE,UACb,IAAI,CAACC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC,CAACC,OAC7C;;KAEH;IAED,IAAI,CAACC,UAAU,CACZC,GAAG,CAAC,wCAAwC,EAAEP,WAAW,CAAC,CAC1DQ,SAAS,CAAEC,CAAC,IAAKC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC,CAAC;EACrC;EACAG,YACUN,UAAsB,EACtBH,YAAiC;IADjC,KAAAG,UAAU,GAAVA,UAAU;IACV,KAAAH,YAAY,GAAZA,YAAY;EACnB;;AArBQL,gBAAgB,C;mBAAhBA,gBAAgB,EAAAe,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,mBAAA;AAAA;AAAhBpB,gBAAgB,C;QAAhBA,gBAAgB;EAAAqB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,QAAA,WAAAC,0BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCT7BX,EAAA,CAAAa,cAAA,QAAG;MAAAb,EAAA,CAAAc,MAAA,qBAAc;MAAAd,EAAA,CAAAe,YAAA,EAAI;;;;;SDSR9B,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}